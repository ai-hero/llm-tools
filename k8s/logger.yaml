apiVersion: apps/v1
kind: Deployment
metadata:
  name: logger
  labels:
    app: logger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logger
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: logger
    spec:
      containers:
        - name: logger
          image: rparundekar/llmhackathon-logger:latest
          imagePullPolicy: Always
          command:
          - "serve"
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "128M"
              cpu: "125m"
            limits:
              memory: "256M"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /health_check
              port: 8080
          env:
          - name: S3_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: S3_ACCESS_KEY
          - name: S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: S3_SECRET_KEY
          - name: S3_REGION_NAME
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: S3_REGION_NAME
          - name: S3_SECURE
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: S3_SECURE
          - name: S3_URL
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: S3_URL
          - name: DATA_BUCKET
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: DATA_BUCKET
---
apiVersion: v1
kind: Service
metadata:
  name: logger
spec:
  selector:
    app: logger
  ports:
    - protocol: TCP
      port: 8080